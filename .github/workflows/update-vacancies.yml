name: Update Vacancies

on:
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 6 —á–∞—Å–æ–≤
    - cron: '0 */6 * * *'
  workflow_dispatch: # –†—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫
    inputs:
      force_update:
        description: '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ'
        required: false
        default: 'false'

jobs:
  update-vacancies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Update vacancies data
        run: |
          # –ü–µ—Ä–µ—Ö–æ–¥–∏–º –≤ –∫–æ—Ä–Ω–µ–≤—É—é –ø–∞–ø–∫—É –ø—Ä–æ–µ–∫—Ç–∞
          cd ${{ github.workspace }}
          
          echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º JSON —Ñ–∞–π–ª–µ ==="
          if [ -f "hh_vacancies.json" ]; then
            ls -la hh_vacancies.json
            echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –≤ —Å—Ç–∞—Ä–æ–º —Ñ–∞–π–ª–µ:"
            grep -o '"id"' hh_vacancies.json | wc -l || echo "0"
          else
            echo "–§–∞–π–ª hh_vacancies.json –Ω–µ –Ω–∞–π–¥–µ–Ω"
          fi
          
          # –°–æ–∑–¥–∞–µ–º —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Å–±–æ—Ä–∞ –í–°–ï–• –≤–∞–∫–∞–Ω—Å–∏–π
          cat > update_all_vacancies.py << 'EOF'
          import requests
          import json
          import os
          import time
          from datetime import datetime
          
          def collect_all_vacancies():
              """–°–æ–±–∏—Ä–∞–µ—Ç –í–°–ï –≤–∞–∫–∞–Ω—Å–∏–∏ —Å–æ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü"""
              print("=== –°–ë–û–† –í–°–ï–• –í–ê–ö–ê–ù–°–ò–ô –°–ò–°–¢–ï–ú–ù–û–ì–û –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê (–£–î–ê–õ–ï–ù–ö–ê) ===")
              print(f"–í—Ä–µ–º—è –Ω–∞—á–∞–ª–∞: {datetime.now()}")
              
              url = "https://api.hh.ru/vacancies"
              headers = {'User-Agent': 'VacancyBot/1.0'}
              
              # –ü–†–ê–í–ò–õ–¨–ù–´–ï –ø–∞—Ä–∞–º–µ—Ç—Ä—ã —Å —Ñ–∏–ª—å—Ç—Ä–∞–º–∏
              params = {
                  'text': '—Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                  'area': '113',              # –†–æ—Å—Å–∏—è
                  'schedule': 'remote',        # –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞
                  'search_field': 'name',      # –ò—Å–∫–∞—Ç—å –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏
                  'per_page': '100',           # –ú–∞–∫—Å–∏–º—É–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É
                  'page': '0'
              }
              
              print(f"üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞:")
              print(f"   - –¢–µ–∫—Å—Ç: {params['text']}")
              print(f"   - –†–µ–≥–∏–æ–Ω: –†–æ—Å—Å–∏—è")
              print(f"   - –ì—Ä–∞—Ñ–∏–∫: –£–¥–∞–ª–µ–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞")
              print(f"   - –ü–æ–∏—Å–∫ –≤: –Ω–∞–∑–≤–∞–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏")
              
              all_vacancies = []
              page = 0
              total_pages = None
              
              while True:
                  params['page'] = str(page)
                  
                  try:
                      print(f"\nüîÑ –ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page + 1}...")
                      response = requests.get(url, params=params, headers=headers, timeout=30)
                      
                      if response.status_code == 200:
                          data = response.json()
                          
                          # –ù–∞ –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ —É–∑–Ω–∞–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ
                          if total_pages is None:
                              total_pages = data.get('pages', 0)
                              total_found = data.get('found', 0)
                              print(f"üìä –ù–∞–π–¥–µ–Ω–æ –≤—Å–µ–≥–æ: {total_found} –≤–∞–∫–∞–Ω—Å–∏–π")
                              print(f"üìÑ –°—Ç—Ä–∞–Ω–∏—Ü –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {total_pages}")
                          
                          items = data.get('items', [])
                          print(f"‚úÖ –ü–æ–ª—É—á–µ–Ω–æ {len(items)} –≤–∞–∫–∞–Ω—Å–∏–π –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page + 1}")
                          
                          # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤–∞–∫–∞–Ω—Å–∏–∏
                          for item in items:
                              vacancy = {
                                  'id': item.get('id'),
                                  'name': item.get('name', ''),
                                  'company': item.get('employer', {}).get('name', '') if item.get('employer') else '',
                                  'company_url': item.get('employer', {}).get('alternate_url', '') if item.get('employer') else '',
                                  'url': item.get('alternate_url', ''),
                                  'published_at': item.get('published_at', ''),
                                  'area': item.get('area', {}).get('name', '') if item.get('area') else '',
                                  'salary': format_salary(item.get('salary')),
                                  'experience': item.get('experience', {}).get('name', '') if item.get('experience') else '',
                                  'employment': item.get('employment', {}).get('name', '') if item.get('employment') else '',
                                  'schedule': item.get('schedule', {}).get('name', '') if item.get('schedule') else '',
                                  'requirement': item.get('snippet', {}).get('requirement', '') if item.get('snippet') else '',
                                  'responsibility': item.get('snippet', {}).get('responsibility', '') if item.get('snippet') else ''
                              }
                              all_vacancies.append(vacancy)
                          
                          # –ü–µ—Ä–µ—Ö–æ–¥ –∫ —Å–ª–µ–¥—É—é—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ
                          page += 1
                          if page >= total_pages:
                              print(f"\n‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω—ã –≤—Å–µ {total_pages} —Å—Ç—Ä–∞–Ω–∏—Ü")
                              break
                          
                          # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏
                          time.sleep(0.5)
                          
                      else:
                          print(f"‚ùå –û—à–∏–±–∫–∞ API –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ {page + 1}: {response.status_code}")
                          break
                          
                  except Exception as e:
                      print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã {page + 1}: {e}")
                      break
              
              return all_vacancies
          
          def format_salary(salary_data):
              """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∑–∞—Ä–ø–ª–∞—Ç–µ"""
              if not salary_data:
                  return "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"
              
              salary_from = salary_data.get('from')
              salary_to = salary_data.get('to')
              currency = salary_data.get('currency', 'RUR')
              gross = salary_data.get('gross', False)
              
              if salary_from and salary_to:
                  result = f"–æ—Ç {salary_from:,} –¥–æ {salary_to:,} {currency}".replace(',', ' ')
              elif salary_from:
                  result = f"–æ—Ç {salary_from:,} {currency}".replace(',', ' ')
              elif salary_to:
                  result = f"–¥–æ {salary_to:,} {currency}".replace(',', ' ')
              else:
                  return "–Ω–µ —É–∫–∞–∑–∞–Ω–∞"
              
              if gross:
                  result += " (–¥–æ –≤—ã—á–µ—Ç–∞ –Ω–∞–ª–æ–≥–æ–≤)"
              else:
                  result += " (–Ω–∞ —Ä—É–∫–∏)"
              
              return result
          
          def main():
              # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π —Ñ–∞–π–ª
              filename = 'hh_vacancies.json'
              if os.path.exists(filename):
                  os.remove(filename)
                  print(f"‚úÖ –°—Ç–∞—Ä—ã–π —Ñ–∞–π–ª —É–¥–∞–ª–µ–Ω")
              
              # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –≤–∞–∫–∞–Ω—Å–∏–∏
              vacancies = collect_all_vacancies()
              
              print(f"\nüìä –ò–¢–û–ì–û —Å–æ–±—Ä–∞–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: {len(vacancies)}")
              
              # –°–æ–∑–¥–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
              result = {
                  'source': 'hh.ru',
                  'search_params': {
                      'text': '—Å–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                      'area': '–†–æ—Å—Å–∏—è',
                      'schedule': '–£–¥–∞–ª—ë–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞',
                      'search_field': '–í –Ω–∞–∑–≤–∞–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–∏'
                  },
                  'updated': datetime.now().strftime('%Y-%m-%dT%H:%M:%SZ'),
                  'total_count': len(vacancies),
                  'vacancies': vacancies
              }
              
              # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
              with open(filename, 'w', encoding='utf-8') as f:
                  json.dump(result, f, ensure_ascii=False, indent=2)
              
              print(f"‚úÖ –§–∞–π–ª {filename} —Å–æ–∑–¥–∞–Ω")
              print(f"üìÅ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: {os.path.getsize(filename)} –±–∞–π—Ç")
              
              # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
              if vacancies:
                  companies = {}
                  for v in vacancies:
                      company = v['company']
                      if company:
                          companies[company] = companies.get(company, 0) + 1
                  
                  top_companies = sorted(companies.items(), key=lambda x: x[1], reverse=True)[:5]
                  print("\nüè¢ –¢–æ–ø-5 –∫–æ–º–ø–∞–Ω–∏–π:")
                  for company, count in top_companies:
                      print(f"   - {company}: {count} –≤–∞–∫–∞–Ω—Å–∏–π")
              
              return len(vacancies) > 0
          
          if __name__ == "__main__":
              success = main()
              print(f"\nüèÅ –†–µ–∑—É–ª—å—Ç–∞—Ç: {'–£–°–ü–ï–•' if success else '–û–®–ò–ë–ö–ê'}")
              exit(0 if success else 1)
          EOF
          
          # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç
          python update_all_vacancies.py
          
          echo ""
          echo "=== –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ñ–∞–π–ª–µ –ø–æ—Å–ª–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è ==="
          if [ -f "hh_vacancies.json" ]; then
            ls -la hh_vacancies.json
            echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –≤ –Ω–æ–≤–æ–º —Ñ–∞–π–ª–µ:"
            grep -o '"id"' hh_vacancies.json | wc -l || echo "0"
            echo ""
            echo "–ü–µ—Ä–≤—ã–µ 3 –≤–∞–∫–∞–Ω—Å–∏–∏:"
            head -50 hh_vacancies.json | grep -E '"name"|"company"' | head -6
          else
            echo "–û–®–ò–ë–ö–ê: –§–∞–π–ª hh_vacancies.json –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω!"
          fi
          
      - name: Commit and push changes
        run: |
          cd ${{ github.workspace }}
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          git add hh_vacancies.json
          
          if git diff --staged --quiet; then
            echo "‚ö†Ô∏è –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∫–æ–º–º–∏—Ç–∞"
          else
            VACANCY_COUNT=$(grep -o '"id"' hh_vacancies.json | wc -l || echo "0")
            git commit -m "üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–π: –Ω–∞–π–¥–µ–Ω–æ $VACANCY_COUNT –≤–∞–∫–∞–Ω—Å–∏–π $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          fi
          
      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          port: 21
          local-dir: "./"
          server-dir: "www/Vacancy/"
          state-name: ".ftp-deploy-sync-state.json"
          dry-run: false
          log-level: verbose
          dangerous-clean-slate: false
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.github/**
            **/README.md
            **/update_vacancies.py
            **/update_all_vacancies.py
            **/simple_update.py
            
      - name: Verify deployment
        run: |
          echo "=== –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å–ø–µ—à–Ω–æ—Å—Ç–∏ –¥–µ–ø–ª–æ—è ==="
          echo "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π –≤ —Ñ–∞–π–ª–µ:"
          grep -o '"id"' hh_vacancies.json | wc -l || echo "0"
          echo ""
          echo "–î–∞—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:"
          grep -o '"updated":[^,]*' hh_vacancies.json || echo "updated –Ω–µ –Ω–∞–π–¥–µ–Ω"
          echo ""
          echo "‚úÖ –î–µ–ø–ª–æ–π –∑–∞–≤–µ—Ä—à–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."
