name: Update Vacancies from HeadHunter API

on:
  schedule:
    # –ó–∞–ø—É—Å–∫ –∫–∞–∂–¥—ã–µ 4 —á–∞—Å–∞ –¥–ª—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
    - cron: '0 */4 * * *'
  workflow_dispatch:
    # –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∑–∞–ø—É—Å–∫–∞ –≤—Ä—É—á–Ω—É—é

env:
  # –¢–∞–π–º–∑–æ–Ω–∞ –¥–ª—è –ª–æ–≥–æ–≤
  TZ: Europe/Moscow

jobs:
  update-vacancies:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        # –£–±–∏—Ä–∞–µ–º cache: 'pip' —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç requirements.txt
        
    - name: Install dependencies
      run: |
        pip install --upgrade pip
        pip install requests
        
    - name: Test API connectivity and get sample data
      run: |
        echo "üîó –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API HeadHunter..."
        python3 -c "
        import requests
        import json
        try:
            # –¢–µ—Å—Ç–∏—Ä—É–µ–º —Å —Ç–µ–º–∏ –∂–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ —á—Ç–æ –≤ —Å–∫—Ä–∏–ø—Ç–µ
            params = {
                'text': '–°–∏—Å—Ç–µ–º–Ω—ã–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä',
                'area': '113',
                'search_field': 'name',
                'per_page': 5,
                'only_with_salary': 'true',
                'schedule': 'remote'
            }
            response = requests.get('https://api.hh.ru/vacancies', params=params, timeout=10)
            print(f'‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å: {response.status_code}')
            if response.status_code == 200:
                data = response.json()
                print(f'üìä –ù–∞–π–¥–µ–Ω–æ –≤–∞–∫–∞–Ω—Å–∏–π: {data.get(\"found\", 0)}')
                print(f'üìÑ –ù–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(data.get(\"items\", []))}')
                if data.get('items'):
                    sample = data['items'][0]
                    print(f'üìù –ü—Ä–∏–º–µ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏: {sample.get(\"name\", \"N/A\")}')
            else:
                print(f'‚ö†Ô∏è  –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç: {response.text[:200]}')
        except Exception as e:
            print(f'‚ùå –û—à–∏–±–∫–∞ API: {e}')
            exit(1)
        "
        
    - name: Update vacancies
      run: |
        echo "üöÄ –ó–∞–ø—É—Å–∫ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤–∞–∫–∞–Ω—Å–∏–π..."
        python3 update_vacancies.py
        
    - name: Verify JSON file
      run: |
        echo "üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π JSON —Ñ–∞–π–ª..."
        if [ -f "hh_vacancies.json" ]; then
          echo "‚úÖ –§–∞–π–ª hh_vacancies.json —Å–æ–∑–¥–∞–Ω"
          echo "üìä –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: $(du -h hh_vacancies.json | cut -f1)"
          
          # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ JSON
          python3 -c "
          import json
          try:
              with open('hh_vacancies.json', 'r', encoding='utf-8') as f:
                  data = json.load(f)
              print(f'üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤–∞–∫–∞–Ω—Å–∏–π: {len(data.get(\"vacancies\", []))}')
              print(f'üïí –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: {data.get(\"updated\", \"–Ω–µ —É–∫–∞–∑–∞–Ω–æ\")}')
              print(f'üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {data.get(\"statistics\", {})}')
              
              # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –≤–∞–∫–∞–Ω—Å–∏–∏
              if data.get('vacancies'):
                  sample = data['vacancies'][0]
                  print(f'üìù –ü—Ä–∏–º–µ—Ä: {sample.get(\"title\", \"N/A\")} - {sample.get(\"salary\", \"N/A\")}')
          except Exception as e:
              print(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ JSON: {e}')
              exit(1)
          "
        else
          echo "‚ùå –§–∞–π–ª hh_vacancies.json –Ω–µ –Ω–∞–π–¥–µ–Ω!"
          exit 1
        fi
        
    - name: Upload to FTP
      uses: SamKirkland/FTP-Deploy-Action@v4.3.4
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        local-dir: ./
        server-dir: /www/Vacancy/
        # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–æ–ª—å–∫–æ JSON —Ñ–∞–π–ª (HTML –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ)
        include: |
          hh_vacancies.json
        # –ò—Å–∫–ª—é—á–∞–µ–º –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ
        exclude: |
          .git*
          .github/
          *.py
          *.md
          *.html
          *.yml
          *.yaml
          
    - name: Notification on success
      if: success()
      run: |
        echo "‚úÖ –í–∞–∫–∞–Ω—Å–∏–∏ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã –∏ –∑–∞–≥—Ä—É–∂–µ–Ω—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä"
        echo "üåê –°—Ç—Ä–∞–Ω–∏—Ü–∞: https://gradelift.ru/Vacancy/vacancy_aggregator.html"
        echo "üìÑ JSON –¥–∞–Ω–Ω—ã–µ: https://gradelift.ru/Vacancy/hh_vacancies.json"
        echo "üïí –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: $(date '+%Y-%m-%d %H:%M:%S %Z')"
        
    - name: Notification on failure  
      if: failure()
      run: |
        echo "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –≤–∞–∫–∞–Ω—Å–∏–π"
        echo "üîç –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ª–æ–≥–∏ –≤—ã—à–µ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏"
        echo "üìß –í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:"
        echo "   - –ü—Ä–æ–±–ª–µ–º—ã —Å API HeadHunter"
        echo "   - –ù–µ–≤–µ—Ä–Ω—ã–µ FTP —Ä–µ–∫–≤–∏–∑–∏—Ç—ã"
        echo "   - –û—à–∏–±–∫–∏ –≤ Python —Å–∫—Ä–∏–ø—Ç–µ"
