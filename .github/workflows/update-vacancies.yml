name: Update Vacancies

on:
  schedule:
    # Запуск каждые 6 часов
    - cron: '0 */6 * * *'
  workflow_dispatch: # Ручной запуск
    inputs:
      force_update:
        description: 'Принудительное обновление'
        required: false
        default: 'false'

jobs:
  update-vacancies:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: Update vacancies data
        run: |
          # Переходим в корневую папку проекта
          cd ${{ github.workspace }}
          # Создаем минимальный скрипт прямо здесь
          cat > simple_update.py << 'EOF'
          import requests
          import json
          import os
          from datetime import datetime
          
          def main():
              print("Получаем вакансии...")
              
              url = "https://api.hh.ru/vacancies"
              headers = {'User-Agent': 'VacancyBot/1.0'}
              params = {
                  'text': 'системный администратор', 
                  'area': '113',
                  'per_page': '20'
              }
              
              try:
                  response = requests.get(url, params=params, headers=headers, timeout=30)
                  print(f"Статус: {response.status_code}")
                  print(f"URL: {response.url}")
                  
                  if response.status_code == 200:
                      data = response.json()
                      items = data.get('items', [])
                      print(f"Получено {len(items)} вакансий")
                      
                      # Простое сохранение
                      result = {
                          'updated_at': datetime.now().isoformat(),
                          'total_count': len(items),
                          'vacancies': []
                      }
                      
                      for item in items:
                          vacancy = {
                              'id': item.get('id'),
                              'name': item.get('name', ''),
                              'company': item.get('employer', {}).get('name', '') if item.get('employer') else '',
                              'url': item.get('alternate_url', ''),
                              'published_at': item.get('published_at', ''),
                              'area': item.get('area', {}).get('name', '') if item.get('area') else '',
                              'salary': item.get('salary'),
                              'snippet': item.get('snippet', {}),
                              'experience': item.get('experience', {}).get('name', '') if item.get('experience') else '',
                              'employment': item.get('employment', {}).get('name', '') if item.get('employment') else '',
                              'schedule': item.get('schedule', {}).get('name', '') if item.get('schedule') else ''
                          }
                          result['vacancies'].append(vacancy)
                      
                      with open('hh_vacancies.json', 'w', encoding='utf-8') as f:
                          json.dump(result, f, ensure_ascii=False, indent=2)
                      
                      print("Данные сохранены успешно!")
                      return True
                  else:
                      print(f"Ошибка API: {response.text}")
                      return False
              except Exception as e:
                  print(f"Ошибка: {e}")
                  return False
          
          if __name__ == "__main__":
              success = main()
              exit(0 if success else 1)
          EOF
          
          # Запускаем созданный скрипт
          python simple_update.py
          
      - name: Commit changes (if any)
        run: |
          # Убеждаемся что мы в корневой директории
          cd ${{ github.workspace }}
          
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Проверяем есть ли изменения в корневой папке
          if [[ -n $(git status --porcelain) ]]; then
            git add hh_vacancies.json
            git commit -m "Автоматическое обновление вакансий $(date '+%Y-%m-%d %H:%M:%S')"
            git push
          else
            echo "Нет изменений для коммита"
          fi
          
      - name: Deploy to FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          protocol: ftp
          port: 21
          local-dir: "./"
          server-dir: "/home/c54971/gradelift.ru/Vacancy/"
          state-name: ".ftp-deploy-sync-state.json"
          dry-run: false
          log-level: verbose
          exclude: |
            **/.git*
            **/.git*/**
            **/node_modules/**
            **/.github/**
            **/README.md
            **/.ftp-deploy-sync-state.json
            **/update_vacancies.py
