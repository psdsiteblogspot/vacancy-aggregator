name: Update Vacancies Full Day

on:
  schedule:
    # Запуск 4 раза в день для разных групп регионов
    - cron: '0 0 * * *'    # 00:00 UTC
    - cron: '0 6 * * *'    # 06:00 UTC
    - cron: '0 12 * * *'   # 12:00 UTC
    - cron: '0 18 * * *'   # 18:00 UTC
  workflow_dispatch:
    inputs:
      regions:
        description: 'Region IDs (comma-separated)'
        required: false
        default: ''

jobs:
  parse-vacancies:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        region_group:
          - name: "major_cities"
            regions: "1,2,3,4,5,6,7,8,9,10"
          - name: "large_cities"
            regions: "11,12,13,14,15,16,17,18,19,20"
          - name: "medium_cities_1"
            regions: "21,22,23,24,25,26,27,28,29,30"
          - name: "medium_cities_2"
            regions: "31,32,33,34,35,36,37,38,39,40"
          - name: "medium_cities_3"
            regions: "41,42,43,44,45,46,47,48,49,50"
          - name: "small_cities_1"
            regions: "51,52,53,54,55,56,57,58,59,60"
          - name: "small_cities_2"
            regions: "61,62,63,64,65,66,67,68,69,70"
          - name: "small_cities_3"
            regions: "71,72,73,74,75,76,77,78,79,80"
          - name: "small_cities_4"
            regions: "81,82,83,84,85,86,87,88,89,90"
          - name: "small_cities_5"
            regions: "91,92,93,94,95,96,97,98,99,100,101,102,103,104,2019"
      max-parallel: 3
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
    
    - name: Parse vacancies
      env:
        REGIONS: ${{ github.event.inputs.regions || matrix.region_group.regions }}
        OUTPUT_FILE: vacancies_${{ matrix.region_group.name }}.json
      run: |
        echo "Parsing regions: $REGIONS"
        python update_vacancies_fullDay.py
    
    - name: Upload results
      uses: actions/upload-artifact@v4
      with:
        name: vacancies-${{ matrix.region_group.name }}
        path: vacancies_${{ matrix.region_group.name }}.json
        retention-days: 7
        if-no-files-found: warn

  merge-results:
    needs: parse-vacancies
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
        pattern: vacancies-*
        merge-multiple: true
    
    - name: List downloaded files
      run: |
        echo "Downloaded files:"
        find artifacts -type f -name "*.json" | head -20
    
    - name: Merge vacancy files
      run: |
        python merge_vacancies.py
    
    - name: Check results
      run: |
        if [ -f "all_vacancies.json" ]; then
          echo "Merge successful!"
          ls -la all_vacancies.json summary.md
        else
          echo "Merge failed!"
          exit 1
        fi
    
    - name: Upload merged results
      uses: actions/upload-artifact@v4
      with:
        name: merged-vacancies-${{ github.run_number }}
        path: |
          all_vacancies.json
          summary.md
        retention-days: 30
    
    - name: Create release
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && success())
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: Vacancies Update ${{ github.run_number }}
        body_path: summary.md
        files: |
          all_vacancies.json
          summary.md
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cleanup:
    needs: merge-results
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Delete old workflow runs
      uses: Mattraks/delete-workflow-runs@v2
      with:
        token: ${{ github.token }}
        repository: ${{ github.repository }}
        retain_days: 7
        keep_minimum_runs: 5
