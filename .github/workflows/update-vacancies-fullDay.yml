name: Update Vacancies - Optimized

on:
  schedule:
    # Запуск несколько раз в день для разных регионов
    - cron: '0 2 * * *'    # 02:00 UTC - крупные города
    - cron: '0 8 * * *'    # 08:00 UTC - средние города
    - cron: '0 14 * * *'   # 14:00 UTC - малые города
    - cron: '0 20 * * *'   # 20:00 UTC - обновление популярных регионов
  workflow_dispatch:
    inputs:
      regions:
        description: 'Список ID регионов через запятую (оставить пустым для всех)'
        required: false
        default: ''
      date_from:
        description: 'Дата начала в формате YYYY-MM-DD'
        required: false
        default: ''

jobs:
  parse-vacancies:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Разбиваем регионы на группы для параллельной обработки
        region_group:
          - name: "major_cities"
            regions: "1,2,3,4,5,6,7,8,9,10"
          - name: "large_cities"
            regions: "11,12,13,14,15,16,17,18,19,20"
          - name: "medium_cities_1"
            regions: "21,22,23,24,25,26,27,28,29,30"
          - name: "medium_cities_2"
            regions: "31,32,33,34,35,36,37,38,39,40"
          - name: "medium_cities_3"
            regions: "41,42,43,44,45,46,47,48,49,50"
          - name: "small_cities_1"
            regions: "51,52,53,54,55,56,57,58,59,60"
          - name: "small_cities_2"
            regions: "61,62,63,64,65,66,67,68,69,70"
          - name: "small_cities_3"
            regions: "71,72,73,74,75,76,77,78,79,80"
          - name: "small_cities_4"
            regions: "81,82,83,84,85,86,87,88,89,90"
          - name: "small_cities_5"
            regions: "91,92,93,94,95,96,97,98,99,100,101,102,103,104,2019"
      max-parallel: 3  # Ограничиваем параллельные задачи
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests pandas pytz
    
    - name: Determine regions to parse
      id: regions
      run: |
        if [ "${{ github.event.inputs.regions }}" != "" ]; then
          echo "regions=${{ github.event.inputs.regions }}" >> $GITHUB_OUTPUT
        else
          # Определяем регионы на основе времени запуска
          HOUR=$(date -u +%H)
          if [ $HOUR -eq 2 ]; then
            echo "regions=${{ matrix.region_group.regions }}" >> $GITHUB_OUTPUT
          elif [ $HOUR -eq 8 ]; then
            echo "regions=${{ matrix.region_group.regions }}" >> $GITHUB_OUTPUT
          elif [ $HOUR -eq 14 ]; then
            echo "regions=${{ matrix.region_group.regions }}" >> $GITHUB_OUTPUT
          else
            echo "regions=${{ matrix.region_group.regions }}" >> $GITHUB_OUTPUT
          fi
        fi
    
    - name: Parse vacancies
      env:
        REGIONS: ${{ steps.regions.outputs.regions }}
        DATE_FROM: ${{ github.event.inputs.date_from }}
        GROUP_NAME: ${{ matrix.region_group.name }}
      run: |
        python update_vacancies_optimized.py \
          --regions "$REGIONS" \
          --date-from "$DATE_FROM" \
          --output "vacancies_${GROUP_NAME}_$(date +%Y%m%d_%H%M%S).json"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: vacancies-${{ matrix.region_group.name }}-${{ github.run_number }}
        path: vacancies_*.json
        retention-days: 7
    
    - name: Check API limits
      if: always()
      run: |
        # Проверка использования API
        if [ -f "api_usage.json" ]; then
          echo "API Usage Report:"
          cat api_usage.json
        fi

  merge-results:
    needs: parse-vacancies
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pandas
    
    - name: Merge all vacancy files
      run: |
        python merge_vacancies.py --input-dir artifacts --output merged_vacancies.json
    
    - name: Generate statistics
      run: |
        python generate_stats.py --input merged_vacancies.json --output vacancy_stats.md
    
    - name: Commit results
      uses: EndBug/add-and-commit@v9
      with:
        add: 'merged_vacancies.json vacancy_stats.md'
        message: 'Update vacancies - ${{ github.run_number }}'
        default_author: github_actions

  cleanup-old-data:
    needs: merge-results
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Clean up old data
      run: |
        # Удаляем файлы старше 7 дней
        find . -name "vacancies_*.json" -mtime +7 -delete
        find . -name "merged_vacancies_*.json" -mtime +30 -delete
